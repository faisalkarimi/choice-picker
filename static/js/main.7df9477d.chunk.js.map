{"version":3,"sources":["components/Heading.js","components/Tag.js","components/TextArea.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Heading","Tags","tagName","highlight","className","TextArea","useState","tags","setTags","setHighlight","randomIndex","setRandomIndex","pickRandomTag","Math","floor","random","length","placeholder","id","onKeyUp","event","text","split","filter","tag","map","trim","createTag","target","value","key","setTimeout","times","interval","setInterval","undefined","clearInterval","randomSelect","index","Tag","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAWeA,EATC,WACd,OACE,qFACqD,uBADrD,oC,OCEWC,EAJF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACvB,OAAO,qBAAKC,UAAS,cAASD,GAAvB,SAAqCD,KC6E/BG,EA7EE,WACf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOH,EAAP,KAAkBM,EAAlB,KACA,EAAsCH,mBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KA8CA,SAASC,IAEP,OADoBC,KAAKC,MAAMD,KAAKE,SAAWR,EAAKS,QAItD,OACE,qCACE,0BACEC,YAAY,wBACZC,GAAG,WACHC,QA9CsB,SAACC,IARX,SAACC,GACjB,IAAMd,EAAOc,EACVC,MAAM,KACNC,QAAO,SAACC,GAAD,MAAiB,KAARA,KAChBC,KAAI,SAACD,GAAD,OAASA,EAAIE,UACpBlB,EAAQD,GAIRoB,CAAUP,EAAMQ,OAAOC,OAEL,UAAdT,EAAMU,MACRC,YAAW,kBAAOX,EAAMQ,OAAOC,MAAQ,KAAK,IAMhD,WACE,IAAMG,EAAQ,GAERC,EAAWC,aAAY,WAC3BvB,EAAeC,UAEKuB,IAAhBzB,IACFD,GAAa,GAEbsB,YAAW,WACTtB,GAAa,KACZ,QAEJ,KAEHsB,YAAW,WACTK,cAAcH,GAEdF,YAAW,WACTpB,EAAeC,KAEfH,GAAa,KACZ,OACM,IAARuB,GA3BDK,OA0CC9B,EAAKkB,KACJ,SAACD,EAAKc,GAAN,MACU,KAARd,GACE,cAACe,EAAD,CACEpC,UACEmC,IAAU5B,IAA6B,IAAdP,EAAqB,YAAc,GAG9DD,QAASsB,GADJc,UC1DJE,EATG,WAChB,OACE,sBAAKpC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDSqC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7df9477d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Heading = () => {\n  return (\n    <h3>\n      Enter all of the choices divided by a comma (','). <br /> Press enter when\n      you're done\n    </h3>\n  );\n};\n\nexport default Heading;\n","import React from \"react\";\n\nconst Tags = ({ tagName, highlight }) => {\n  return <div className={`tag ${highlight}`}>{tagName}</div>;\n};\n\nexport default Tags;\n","import React, { useState } from \"react\";\nimport Tag from \"./Tag\";\n\nconst TextArea = () => {\n  const [tags, setTags] = useState([]);\n  const [highlight, setHighlight] = useState(false);\n  const [randomIndex, setRandomIndex] = useState(0);\n\n  const createTag = (text) => {\n    const tags = text\n      .split(\",\")\n      .filter((tag) => tag !== \"\")\n      .map((tag) => tag.trim());\n    setTags(tags);\n  };\n\n  const handleEnterKeyPress = (event) => {\n    createTag(event.target.value);\n\n    if (event.key === \"Enter\") {\n      setTimeout(() => (event.target.value = \"\"), 10);\n\n      randomSelect();\n    }\n  };\n\n  function randomSelect() {\n    const times = 30;\n\n    const interval = setInterval(() => {\n      setRandomIndex(pickRandomTag());\n\n      if (randomIndex !== undefined) {\n        setHighlight(true);\n\n        setTimeout(() => {\n          setHighlight(false);\n        }, 100);\n      }\n    }, 100);\n\n    setTimeout(() => {\n      clearInterval(interval);\n\n      setTimeout(() => {\n        setRandomIndex(pickRandomTag());\n\n        setHighlight(true);\n      }, 100);\n    }, times * 100);\n  }\n\n  function pickRandomTag() {\n    const randomIndex = Math.floor(Math.random() * tags.length);\n    return randomIndex;\n  }\n\n  return (\n    <>\n      <textarea\n        placeholder=\"Enter choices here...\"\n        id=\"textarea\"\n        onKeyUp={handleEnterKeyPress}\n      ></textarea>\n      {tags.map(\n        (tag, index) =>\n          tag !== \"\" && (\n            <Tag\n              highlight={\n                index === randomIndex && highlight === true ? \"highlight\" : \"\"\n              }\n              key={index}\n              tagName={tag}\n            />\n          )\n      )}\n    </>\n  );\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport Heading from \"./Heading\";\nimport TextArea from \"./TextArea\";\n\nconst Container = () => {\n  return (\n    <div className=\"container\">\n      <Heading />\n      <TextArea />\n    </div>\n  );\n};\n\nexport default Container;\n","import \"./App.css\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return <Container />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}